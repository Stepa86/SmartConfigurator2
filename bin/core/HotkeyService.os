Перем СценарийФормыХоткея;
Перем ФормаХоткея;
Перем Модель;

Процедура ПриСозданииОбъекта()
	
	СценарийФормыХоткея = ЗагрузитьСценарий("core/forms/FormCardHotkey.os");
	ФормаХоткея = СценарийФормыХоткея.ПолучитьФорму();
	
	Модель = ЗагрузитьСценарий("core/models/Hotkey.os");

КонецПроцедуры

#Область CRUD

Процедура Добавить()
	
	ФормаХоткея.Показать();
	
	Если СценарийФормыХоткея.Сохранить Тогда
		Сохранить();
	КонецЕсли;
	
КонецПроцедуры

Процедура Изменить(УИД)
	
	Запись = Модель.НайтиЭлемент(УИД);
	
	Если Запись = Неопределено Тогда
		ВызватьИсключение "Не найден хоткеи с ID: " + УИД + ".";
		Возврат;
	КонецЕсли;
	
	СценарийФормыХоткея.УстановитьДанныеФормы(Запись);
	
	ФормаХоткея.Показать();

	Если СценарийФормыХоткея.Сохранить Тогда
		Обновить();
	КонецЕсли;
	
КонецПроцедуры

Процедура Удалить(УИД)
	Модель.УдалитьЭлемент(УИД);
КонецПроцедуры

Процедура Сохранить()
	
	СтруктураХоткея = Модель.СтруктураЗаписи();
	СтруктураХоткея.Id = Неопределено;
	СтруктураХоткея.Key = СценарийФормыХоткея.ПолеКлавиша.Значение;
	СтруктураХоткея.Ctrl = СценарийФормыХоткея.ФлагCtrl.Значение;
	СтруктураХоткея.Alt = СценарийФормыХоткея.ФлагAlt.Значение;
	СтруктураХоткея.Shift = СценарийФормыХоткея.ФлагShift.Значение;
	СтруктураХоткея.Win = СценарийФормыХоткея.ФлагWin.Значение;
	СтруктураХоткея.Command = СценарийФормыХоткея.ПолеДействие.Значение;
	СтруктураХоткея.App = ОбрабатываемыеХоткеемПриложения();
	СтруктураХоткея.Comment = СценарийФормыХоткея.ПолеКомментарий.Значение;

	Модель.СохранитьЭлемент(СтруктураХоткея);
	
КонецПроцедуры

Процедура Обновить()
	
	СтруктураХоткея = Модель.СтруктураЗаписи();
	СтруктураХоткея.Id = СценарийФормыХоткея.УИД;
	СтруктураХоткея.Key = СценарийФормыХоткея.ПолеКлавиша.Значение;
	СтруктураХоткея.Ctrl = СценарийФормыХоткея.ФлагCtrl.Значение;
	СтруктураХоткея.Alt = СценарийФормыХоткея.ФлагAlt.Значение;
	СтруктураХоткея.Shift = СценарийФормыХоткея.ФлагShift.Значение;
	СтруктураХоткея.Win = СценарийФормыХоткея.ФлагWin.Значение;
	СтруктураХоткея.Command = СценарийФормыХоткея.ПолеДействие.Значение;
	СтруктураХоткея.App = ОбрабатываемыеХоткеемПриложения();
	СтруктураХоткея.Comment = СценарийФормыХоткея.ПолеКомментарий.Значение;

	Модель.СохранитьЭлемент(СтруктураХоткея);
	
КонецПроцедуры

Процедура ПереместитьЭлементВверх(ИдЭлемента)
	
	ПереместитьЭлемент(ИдЭлемента, -1);

КонецПроцедуры

Процедура ПереместитьЭлементВниз(ИдЭлемента)

	ПереместитьЭлемент(ИдЭлемента, 1);

КонецПроцедуры

#КонецОбласти

Процедура ПереместитьЭлемент(ИдЭлемента, Направление)

	СписокЭлементов = Модель.Коллекция();
	СписокЗначений = Новый СписокЗначений();
	СписокЗначений.ЗагрузитьЗначения(СписокЭлементов);

	Для каждого Элемент Из СписокЗначений Цикл
		
		Если Элемент.Значение.Id = ИдЭлемента Тогда
			СписокЗначений.Сдвинуть(Элемент, Направление);
			Прервать;
		КонецЕсли;

	КонецЦикла;

	СписокЭлементов = СписокЗначений.ВыгрузитьЗначения();
	Модель.СохранитьКоллекцию(СписокЭлементов);	
	
КонецПроцедуры

Функция ОбрабатываемыеХоткеемПриложения()

	Возврат СценарийФормыХоткея.ПолеПриложения.Значение;

КонецФункции

Процедура ВыполнитьКоманду(ИмяКоманды, ПараметрыКоманды) Экспорт
	
	Если ИмяКоманды = "add" Тогда
		Добавить();
	ИначеЕсли ИмяКоманды = "edit" Тогда
		Изменить(ПараметрыКоманды);
	ИначеЕсли ИмяКоманды = "delete" Тогда
		Удалить(ПараметрыКоманды);
	ИначеЕсли ИмяКоманды = "moveUp" Тогда
		ПереместитьЭлементВверх(ПараметрыКоманды);
	ИначеЕсли ИмяКоманды = "moveDown" Тогда
		ПереместитьЭлементВниз(ПараметрыКоманды);
	Иначе
		ВызватьИсключение "Неопределено действие для команды: " + ИмяКоманды + " (" + ПараметрыКоманды + ")";
	КонецЕсли;
	
КонецПроцедуры

