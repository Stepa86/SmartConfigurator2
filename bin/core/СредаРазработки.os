#Использовать WinExt

Перем ТекущаяСредаРазработки;

#Область ПрограммныйИнтерфейс

Процедура ОбработатьВыборШаблона() Экспорт
	ТекущаяСредаРазработки.ОбработатьВыборШаблона();
КонецПроцедуры
Процедура ПерейтиПоОператорнымСкобкамНазад() Экспорт
	ТекущаяСредаРазработки.ПерейтиПоОператорнымСкобкамНазад();
КонецПроцедуры

Процедура ПерейтиВНачалоСтроки() Экспорт
	ТекущаяСредаРазработки.ПерейтиВНачалоСтроки();
КонецПроцедуры

Процедура ПерейтиВКонецСтроки() Экспорт
	ТекущаяСредаРазработки.ПерейтиВКонецСтроки();
КонецПроцедуры

Процедура ПерейтиНаНовуюСтроку() Экспорт
	ТекущаяСредаРазработки.ПерейтиНаНовуюСтроку();
КонецПроцедуры

Процедура СдвинутьКурсорВправо() Экспорт
	ТекущаяСредаРазработки.СдвинутьКурсорВправо();
КонецПроцедуры

Процедура СдвинутьКурсорВлево() Экспорт
	ТекущаяСредаРазработки.СдвинутьКурсорВлево();
КонецПроцедуры

Процедура ПерейтиКСтрокеПоНомеру(НомерСтроки) Экспорт
	ТекущаяСредаРазработки.ПерейтиКСтрокеПоНомеру(НомерСтроки);
КонецПроцедуры

Функция НайденоОкноСЗаголовком(ИскомоеЗначение, КолСекОжидания = 5) Экспорт
	Возврат ТекущаяСредаРазработки.НайденоОкноСЗаголовком(ИскомоеЗначение, КолСекОжидания);
КонецФункции

Функция ТекстВышеКурсора() Экспорт
	Возврат ТекущаяСредаРазработки.ТекстВышеКурсора();
КонецФункции

Функция ПолучитьВыделенныйТекст() Экспорт
	Возврат ТекущаяСредаРазработки.ПолучитьВыделенныйТекст();
КонецФункции

Функция ПолучитьТекстИзБуфераОбмена() Экспорт
	Возврат ТекущаяСредаРазработки.ПолучитьТекстИзБуфераОбмена();
КонецФункции

Процедура УстановитьТекстВБуферОбмена(НовыйТекст = "") Экспорт
	ТекущаяСредаРазработки.УстановитьТекстВБуферОбмена(НовыйТекст);
КонецПроцедуры

Процедура ПоместитьВБуферТекстТекущейСтроки() Экспорт
	ТекущаяСредаРазработки.ПоместитьВБуферТекстТекущейСтроки();
КонецПроцедуры

Функция ПолучитьУказанноеКоличествоСтрокВышеКурсора(КоличествоСтрок) Экспорт
	Возврат ТекущаяСредаРазработки.ПолучитьУказанноеКоличествоСтрокВышеКурсора(КоличествоСтрок);
КонецФункции

Функция ТекстМодуля() Экспорт
	Возврат ТекущаяСредаРазработки.ТекстМодуля();
КонецФункции

Процедура УстановитьТекстВВыделение(НовыйТекст) Экспорт
	ТекущаяСредаРазработки.УстановитьТекстВВыделение(НовыйТекст);
КонецПроцедуры

// Форматировать текст средствами конфигуратора
Процедура ФорматироватьВыделенныйТекст() Экспорт
	ТекущаяСредаРазработки.ФорматироватьВыделенныйТекст();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#КонецОбласти

Процедура ПриСозданииОбъекта()

	ПодключитьСценарий("core/interfaces.os", "Интерфейсы");
	Интерфейсы = Новый Интерфейсы;
	ИнтерфейсРеализован = Интерфейсы.Реализован(ЭтотОбъект, "core/interfaces/IDE");

	Если НЕ ИнтерфейсРеализован Тогда
		ВызватьИсключение  Интерфейсы.ОшибкиРеализации;
	КонецЕсли;
	
	РаботаСОкнами = Новый РаботаСОкнами();
	ИД = РаботаСОкнами.ИдПроцессаТекущегоОкна();

	ИнформацияОбИсполняемомФайле = Новый ИнформацияОбИсполняемомФайле();
	Модуль = ИнформацияОбИсполняемомФайле.ОсновнойМодуль(ИД);
	ИмяПриложения = Модуль.ModuleName;

	ПутьКФайлу = "core/ide/" + ИмяПриложения + ".os";

	ФайлСкриптаСредыРазработки = Новый Файл(ПутьКФайлу);

	Если ФайлСкриптаСредыРазработки.Существует() Тогда
		ТекущаяСредаРазработки = ЗагрузитьСценарий(ПутьКФайлу);	
	Иначе
		ТекущаяСредаРазработки = Неопределено;
	КонецЕсли;

КонецПроцедуры